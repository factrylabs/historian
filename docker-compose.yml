services:
  historian:
    image: "factry/historian:latest"
    hostname: "historian"
    depends_on:
      postgres:
        condition: service_healthy
      influxdb:
        condition: service_started
    environment:
      AUTO_MIGRATE: "true"
      DB_HOST: "postgres"
      DB_NAME: "factry_historian"
      DB_USER_NAME: "factry"
      DB_PASSWORD: "password"
    ports:
      - "8000:8000"
      - "8001:8001"
    links:
      - postgres
      - influxdb
      - grafana
    volumes:
      - "historian:/var/opt/factry"
    restart: "unless-stopped"

  postgres:
    image: "postgres:17-alpine"
    hostname: "postgres"
    environment:
      POSTGRES_DB: "factry_historian"
      POSTGRES_USER: "factry"
      POSTGRES_PASSWORD: "password"
    volumes:
      - "postgres:/var/lib/postgresql/data"
    restart: "unless-stopped"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U factry -d factry_historian"]
      interval: 5s
      timeout: 5s
      retries: 5

  grafana:
    image: "grafana/grafana-oss:latest"
    hostname: "grafana"
    links:
      - postgres
      - influxdb
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    ports:
      - "3000:3000"
    volumes:
      - "grafana:/var/lib/grafana"
    restart: "unless-stopped"
  influxdb:
    image: "influxdb:1.8"
    hostname: "influx"
    environment:
      INFLUXDB_HTTP_AUTH_ENABLED: "true"
      INFLUXDB_ADMIN_USER: "factry"
      INFLUXDB_ADMIN_PASSWORD: "password"
    volumes:
      - "influxdb:/var/lib/influxdb"
    restart: "unless-stopped"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --spider --tries=1 http://localhost:8086/ping || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 5

volumes:
  grafana:
  historian:
  postgres:
  influxdb:
